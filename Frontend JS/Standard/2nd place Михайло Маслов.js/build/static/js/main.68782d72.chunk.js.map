{"version":3,"sources":["app/constans/AppStatus.js","app/game/Game.js","app/helloMenu/HelloMenu.js","app/createCrossword/CreateCrossword.js","app/addQuestions/AddQuestions.js","app/Switch.js","app/App.js","serviceWorker.js","index.js"],"names":["HELLO_MENU","Game","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","matrix","crossword","map","y","x","focusedCell","onFocusCell","bind","assertThisInitialized","onKeyPress","e","id","target","tagName","toLowerCase","parentNode","attributes","value","setState","event","_this$state","newMatrix","l","slice","xy","split","which","keyCode","String","fromCharCode","charCode","document","onkeypress","_this$props","goHome","_this$state2","table","line","i","react_default","a","createElement","key","letter","j","wordNumber","wordStarts","findIndex","arr","isWordStart","className","onClick","verticalQuestions","q","horizontalQuestions","length","Component","HelloMenu","createCrossword","gameCrossword","CreateCrossword","AddQuestions","questions","answers","questionValue","answerValue","handleChangeQuestion","handleChangeAnswer","addQuestionAndAnswer","delQuestionAndAnswer","newQuestions","newAnswers","push","_this2","splice","saveHandler","onSave","tr","type","onChange","Switch","appStatus","changeStatus","addCrossword","changeStatusOn","newStatus","addQuestions_AddQuestions","createCrossword_CreateCrossword","status","game_Game","helloMenu_HelloMenu","App","crosswords","app_Switch","Boolean","window","location","hostname","match","ReactDOM","render","app_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.68782d72.chunk.js","sourcesContent":["export const HELLO_MENU = 'HELLO_MENU';\nexport const ADD_QUESTIONS = 'ADD_QUESTIONS';\nexport const CREATE_CROSSWORD = 'CREATE_CROSSWORD';\nexport const GAME = 'GAME';","import React, { Component } from 'react';\n\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      matrix: this.props.crossword.matrix.map(y => y.map(x => x ? '' : 0)),\n      focusedCell: null,\n    };\n    \n    this.onFocusCell = this.onFocusCell.bind(this);\n    this.onKeyPress = this.onKeyPress.bind(this);\n  }\n  \n  onFocusCell(e) {\n    let id;\n    \n    if (e.target.tagName.toLowerCase() === 'span') {\n      id = e.target.parentNode.attributes.id.value;\n    } else {\n      id = e.target.attributes.id.value;\n    }\n    \n    this.setState({\n      focusedCell: id,\n    });\n  }\n  \n  onKeyPress(e) {\n    function getChar(event) {\n      if (event.which == null) {\n        if (event.keyCode < 32) return null;\n        return String.fromCharCode(event.keyCode)\n      }\n    \n      if (event.which !== 0 && event.charCode !== 0) {\n        if (event.which < 32) return null;\n        return String.fromCharCode(event.which);\n      }\n    \n      return null;\n    }\n    \n    const { focusedCell, matrix } = this.state;\n    const newMatrix = matrix.map(l => l.slice());\n    \n    let xy = focusedCell.split('-');\n    newMatrix[xy[0]][xy[1]] = getChar(e);\n    \n    this.setState({\n      matrix: newMatrix\n    })\n  }\n  \n  componentDidMount() {\n    document.onkeypress = this.onKeyPress;\n  }\n  \n  componentWillUnmount() {\n    document.onkeypress = null;\n  }\n  \n  render() {\n    const { onFocusCell } = this;\n    const { goHome, crossword } = this.props;\n    const { matrix, focusedCell } = this.state;\n    \n    const isWordStart = (i, j) => {\n      return crossword.wordStarts.findIndex(\n        arr => arr[1] === i && arr[0] === j\n      );\n    };\n    \n    const table = matrix.map((line, i) => {\n      return (\n        <tr key={i}>\n          {line.map((letter, j) => {\n            let id = i+'-'+j;\n            let wordNumber = isWordStart(i, j) + 1;\n            \n            return (\n              <td key={id} id={id}\n                  className={letter === 0 ? 'empty' :\n                   id === focusedCell ? 'with-letter focused' : 'with-letter'}\n                  onClick={letter !== 0 ? onFocusCell : null}\n              >\n                {letter === 0 ? '' :\n                  (<span className={letter === crossword.matrix[i][j] ? 'correct' : 'incorrect'}>\n                    {letter}</span>)\n                }\n                {wordNumber ? <span className={'word-number'}>{wordNumber}</span> : null}\n              </td>\n            )\n          })}\n        </tr>\n      )\n    });\n    \n    const verticalQuestions = crossword.verticalQuestions.map((q, i) => {\n      return (\n        <li key={i}>{(i+1)+'.'+q}</li>\n      )\n    });\n  \n    const horizontalQuestions = crossword.horizontalQuestions.map((q, i) => {\n      return (\n        <li key={i}>{(i+verticalQuestions.length+1)+'.'+q}</li>\n      )\n    });\n    \n    return(\n      <div className=\"mdl-card mdl-shadow--2dp\">\n        <table className={'crossword-table'}>\n          <tbody>\n            {table}\n          </tbody>\n        </table>\n        <div className=\"mdl-card__actions mdl-card--border\">\n          <button className=\"mdl-button mdl-button--colored\"\n                  onClick={goHome}\n          >\n            Go home\n          </button>\n        </div>\n        <div className={'question'}>\n          <div className=\"question-card mdl-card mdl-shadow--2dp\">\n            <div className=\"mdl-card__title\">\n              <h2 className=\"mdl-card__title-text\">Vertical</h2>\n            </div>\n            <div className=\"mdl-card__supporting-text\">\n              <ul>{verticalQuestions}</ul>\n            </div>\n          </div>\n          <div className=\"question-card mdl-card mdl-shadow--2dp\">\n            <div className=\"mdl-card__title\">\n              <h2 className=\"mdl-card__title-text\">Horizontal</h2>\n            </div>\n            <div className=\"mdl-card__supporting-text\">\n              <ul>{horizontalQuestions}</ul>\n            </div>\n          </div>\n        </div>\n        <div className={'info'}>\n          Click to choose cell\n          (<span className={'correct'}>correct</span>|\n          <span className={'incorrect'}>incorrect</span> letter)\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Game;","import React from 'react';\n\nconst HelloMenu = props => {\n  const { createCrossword, gameCrossword } = props;\n  \n  return (\n    <div className=\"hello-menu mdl-card mdl-shadow--2dp\">\n      <div className=\"mdl-card__title\">\n        <h2 className=\"mdl-card__title-text\">Welcome</h2>\n      </div>\n      <div className=\"mdl-card__actions mdl-card--border\">\n        <button className=\"mdl-button mdl-button--colored\"\n           onClick={createCrossword}\n        >\n          Create crossword\n        </button>\n         or\n        <button className=\"mdl-button mdl-button--colored\"\n                onClick={gameCrossword}\n        >\n          Game example crossword\n        </button>\n      </div>\n    </div>\n  )\n};\n\nexport default HelloMenu;","import React, { Component } from 'react';\n\n\nclass CreateCrossword extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {};\n  }\n  \n  render() {\n    return(\n      <button className=\"mdl-button mdl-button--colored\"\n              onClick={this.props.goHome}\n      >\n        Go home\n      </button>\n    )\n  }\n}\n\nexport default CreateCrossword;","import React, { Component } from 'react';\n\n\nclass AddQuestions extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      questions: [],\n      answers: [],\n      \n      questionValue: 'Question...',\n      answerValue: 'Answer...'\n    };\n    \n    this.handleChangeQuestion = this.handleChangeQuestion.bind(this);\n    this.handleChangeAnswer = this.handleChangeAnswer.bind(this);\n    this.addQuestionAndAnswer = this.addQuestionAndAnswer.bind(this);\n    this.delQuestionAndAnswer = this.delQuestionAndAnswer.bind(this);\n  }\n  \n  handleChangeQuestion(event) {\n    this.setState({ questionValue: event.target.value });\n  }\n  \n  handleChangeAnswer(event) {\n    this.setState({ answerValue: event.target.value });\n  }\n  \n  addQuestionAndAnswer() {\n    const { questionValue, answerValue } = this.state;\n    \n    if (questionValue.length && answerValue.length) {\n      const newQuestions = this.state.questions.slice();\n      const newAnswers = this.state.answers.slice();\n      \n      newQuestions.push(questionValue);\n      newAnswers.push(answerValue);\n      \n      this.setState({\n        questions: newQuestions,\n        answers: newAnswers,\n        questionValue: 'Question...',\n        answerValue: 'Answer...'\n      })\n    }\n  }\n  \n  delQuestionAndAnswer(i) {\n    return () => {\n      const newQuestions = this.state.questions.slice();\n      const newAnswers = this.state.answers.slice();\n  \n      newQuestions.splice(i, 1);\n      newAnswers.splice(i, 1);\n  \n      this.setState({\n        questions: newQuestions,\n        answers: newAnswers,\n      })\n    };\n  }\n  \n  render() {\n    const {\n      handleChangeQuestion, handleChangeAnswer,\n      addQuestionAndAnswer, delQuestionAndAnswer\n    } = this;\n    const { questionValue, answerValue, questions, answers } = this.state;\n    const { saveHandler } = this.props;\n    \n    const onSave = questions.length ? saveHandler(questions, answers) : null;\n    \n    const tr = questions.length ? questions.map((q, i) => {\n      return (\n        <tr key={i}>\n          <td className=\"mdl-data-table__cell--non-numeric\">{q}</td>\n          <td className=\"mdl-data-table__cell--non-numeric\">{answers[i]}</td>\n          <td className=\"mdl-data-table__cell\">\n            <button className=\"mdl-button mdl-button--colored\"\n              onClick={delQuestionAndAnswer(i)}\n            >\n              <i className=\"material-icons\">close</i>\n            </button>\n          </td>\n        </tr>\n      )\n    }) : null;\n    \n    return(\n      <div className=\"add-question mdl-card mdl-shadow--2dp\">\n        <div className=\"mdl-card__title\">\n          <h2 className=\"mdl-card__title-text\">Add questions and answers</h2>\n        </div>\n        <table className=\"mdl-data-table\">\n          <thead>\n          <tr>\n            <th className=\"mdl-data-table__cell--non-numeric\">Question</th>\n            <th className=\"mdl-data-table__cell--non-numeric\">Answer</th>\n            <th className=\"mdl-data-table__cell\">Delete</th>\n          </tr>\n          </thead>\n          <tbody>{tr}</tbody>\n        </table>\n        <form className=\"mdl-card--border\">\n            <input className=\"mdl-textfield__input\" type=\"text\"\n                   value={questionValue} onChange={handleChangeQuestion}\n            />\n            <input className=\"mdl-textfield__input\" type=\"text\"\n                   value={answerValue} onChange={handleChangeAnswer}\n            />\n        </form>\n        <div className=\"mdl-card__actions\">\n          <button className=\"mdl-button mdl-button--colored\"\n                  onClick={addQuestionAndAnswer}\n          >\n            Add\n          </button>\n        </div>\n          <button className=\"save-button mdl-button mdl-button--colored\"\n                  onClick={onSave}\n          >\n            Save\n          </button>\n      </div>\n    )\n  }\n}\n\nexport default AddQuestions;","import React from 'react';\nimport * as status from './constans/AppStatus';\nimport Game from './game/Game';\nimport HelloMenu from './helloMenu/HelloMenu';\nimport CreateCrossword from './createCrossword/CreateCrossword';\nimport AddQuestions from './addQuestions/AddQuestions';\n\n\nconst Switch = props => {\n  const { appStatus, changeStatus, addCrossword, crossword } = props;\n  \n  const changeStatusOn = newStatus => () => {\n    changeStatus(newStatus);\n  };\n  \n  switch (appStatus) {\n    case status.ADD_QUESTIONS: {\n      const saveHandler = (questions, answers) => () => {\n        addCrossword(questions, answers);\n        changeStatusOn(status.CREATE_CROSSWORD)();\n      };\n      \n      return (\n        <AddQuestions saveHandler={saveHandler}/>\n      )\n    }\n    case status.CREATE_CROSSWORD: {\n      return (\n        <CreateCrossword goHome={changeStatusOn(status.HELLO_MENU)}/>\n      )\n    }\n    case status.GAME: {\n      return (\n        <Game\n          crossword={crossword}\n          goHome={changeStatusOn(status.HELLO_MENU)}\n        />\n      )\n    }\n    default : {\n      return (\n        <HelloMenu\n          createCrossword={changeStatusOn(status.ADD_QUESTIONS)}\n          gameCrossword={changeStatusOn(status.GAME)}\n        />\n      )\n    }\n  }\n};\n\nexport default Switch;","import React, { Component } from 'react';\nimport { HELLO_MENU } from './constans/AppStatus';\nimport Switch from './Switch';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      appStatus: HELLO_MENU,\n      crosswords: [{\n        verticalQuestions: [\n          'Спортивная игра в мяч, при которой используется ракетка.',\n          'Спортивная игра в мяч, который бросают через сетку.',\n          'Спортивная командная игра на льду.',\n          'Спортивная игра в мяч ногами.'\n        ],\n        horizontalQuestions: [\n          'Спортивная игра с мячом овальной формы.',\n          'Спортивная игра в мяч, который бросают в специальное приспособление на столбе.'\n        ],\n        wordStarts: [[10, 0], [7, 1], [3, 5], [5, 5], [6, 4], [0, 7]],\n        matrix: [\n          [null, null, null, null, null, null, null, null, null, null, 'т'],\n          [null, null, null, null, null, null, null, 'в', null, null, 'е'],\n          [null, null, null, null, null, null, null, 'о', null, null, 'н'],\n          [null, null, null, null, null, null, null, 'л', null, null, 'н'],\n          [null, null, null, null, null, null, 'р', 'е', 'г', 'б', 'и'],\n          [null, null, null, 'х', null, 'ф', null, 'й', null, null, 'с'],\n          [null, null, null, 'о', null, 'у', null, 'б', null, null, null],\n          ['б', 'а', 'с', 'к', 'е', 'т', 'б', 'о', 'л', null, null],\n          [null, null, null, 'к', null, 'б', null, 'л', null, null, null],\n          [null, null, null, 'е', null, 'о', null, null, null, null, null],\n          [null, null, null, 'й', null, 'л', null, null, null, null, null]\n        ]\n      }]\n    };\n    \n    this.changeStatus = this.changeStatus.bind(this);\n    this.addCrossword = this.addCrossword.bind(this);\n  }\n  \n  addCrossword(questions, answers) {\n    // const newCrosswords = this.state.crosswords.splice();\n    // newCrosswords.push({ questions, answers: answers.map(a => a.toLowerCase())});\n    //\n    // this.setState({\n    //   crosswords: newCrosswords\n    // });\n  }\n  \n  changeStatus(newStatus) {\n    this.setState({\n      appStatus: newStatus\n    });\n  }\n  \n  render() {\n    const { changeStatus, addCrossword, state } = this;\n    const { appStatus, crosswords } = state;\n    \n    return (\n      <Switch appStatus={appStatus}\n              changeStatus={changeStatus}\n              addCrossword={addCrossword}\n              crossword={crosswords[0]}\n      />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}